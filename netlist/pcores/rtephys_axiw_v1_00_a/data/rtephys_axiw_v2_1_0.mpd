## Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.

## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.

BEGIN rtephys_axiw

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION STYLE = MIX
OPTION HDL = MIXED
OPTION IPTYPE = PERIPHERAL
OPTION LAST_UPDATED = 14.7i
OPTION USAGE_LEVEL = BASE_USER
OPTION ARCH_SUPPORT_MAP = ( others=PRODUCTION )

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), BUS = S_AXI, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), BUS = S_AXI, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI
PARAMETER C_S_AXI_ID_WIDTH = 1, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_SUPPORT_BURST = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI

# Bus specific parameters

# Memory Map Information
# From Registers
# To Registers
PARAMETER C_MEMMAP_E1_TEMPLATE_SIZE = 0x800, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_E1_TEMPLATE_SIZE_N_BITS = 16, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_E1_TEMPLATE_SIZE_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
# From FIFOs
# To FIFOs
# Shared RAMs

# Ports
PORT axi_aresetn = aresetn, BUS = S_AXI, SIGIS = RST, DIR = IN
PORT sysgen_clk = "", SIGIS = CLK, ASSIGNMENT = REQUIRE, DIR = IN
PORT sysgen_clk = "", SIGIS = CLK, ASSIGNMENT = REQUIRE, DIR = IN
PORT from_register1_data_out = "", VEC = [(16-1):0], DIR = IN
PORT from_register2_data_out = "", VEC = [(8-1):0], DIR = IN
PORT gateway_in = "", DIR = IN
PORT sysgen_clk = "", SIGIS = CLK, ASSIGNMENT = REQUIRE, DIR = IN
PORT s_axi_araddr = araddr, VEC = [(32-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arburst = arburst, VEC = [(2-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arcache = arcache, VEC = [(4-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arid = arid, VEC = [(C_S_AXI_ID_WIDTH-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arlen = arlen, VEC = [(8-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arlock = arlock, VEC = [(2-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arprot = arprot, VEC = [(3-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arsize = arsize, VEC = [(3-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_arvalid = arvalid, BUS = S_AXI, DIR = IN
PORT s_axi_awaddr = awaddr, VEC = [(32-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awburst = awburst, VEC = [(2-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awcache = awcache, VEC = [(4-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awid = awid, VEC = [(C_S_AXI_ID_WIDTH-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awlen = awlen, VEC = [(8-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awlock = awlock, VEC = [(2-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awprot = awprot, VEC = [(3-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awsize = awsize, VEC = [(3-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_awvalid = awvalid, BUS = S_AXI, DIR = IN
PORT s_axi_bready = bready, BUS = S_AXI, DIR = IN
PORT s_axi_rready = rready, BUS = S_AXI, DIR = IN
PORT s_axi_wdata = wdata, VEC = [(32-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_wlast = wlast, BUS = S_AXI, DIR = IN
PORT s_axi_wstrb = wstrb, VEC = [(4-1):0], BUS = S_AXI, DIR = IN
PORT s_axi_wvalid = wvalid, BUS = S_AXI, DIR = IN
PORT shared_memory1_data_out = "", VEC = [(16-1):0], DIR = IN
PORT shared_memory2_data_out = "", VEC = [(16-1):0], DIR = IN
PORT shared_memory_data_out = "", VEC = [(16-1):0], DIR = IN
PORT gateway_out = "", VEC = [(24-1):0], DIR = OUT
PORT s_axi_arready = arready, BUS = S_AXI, DIR = OUT
PORT s_axi_awready = awready, BUS = S_AXI, DIR = OUT
PORT s_axi_bid = bid, VEC = [(C_S_AXI_ID_WIDTH-1):0], BUS = S_AXI, DIR = OUT
PORT s_axi_bresp = bresp, VEC = [(2-1):0], BUS = S_AXI, DIR = OUT
PORT s_axi_bvalid = bvalid, BUS = S_AXI, DIR = OUT
PORT s_axi_rdata = rdata, VEC = [(32-1):0], BUS = S_AXI, DIR = OUT
PORT s_axi_rid = rid, VEC = [(C_S_AXI_ID_WIDTH-1):0], BUS = S_AXI, DIR = OUT
PORT s_axi_rlast = rlast, BUS = S_AXI, DIR = OUT
PORT s_axi_rresp = rresp, VEC = [(2-1):0], BUS = S_AXI, DIR = OUT
PORT s_axi_rvalid = rvalid, BUS = S_AXI, DIR = OUT
PORT s_axi_wready = wready, BUS = S_AXI, DIR = OUT
PORT shared_memory1_addr = "", VEC = [(7-1):0], DIR = OUT
PORT shared_memory1_ce = "", DIR = OUT
PORT shared_memory1_clk = "", DIR = OUT
PORT shared_memory2_addr = "", VEC = [(7-1):0], DIR = OUT
PORT shared_memory2_ce = "", DIR = OUT
PORT shared_memory2_clk = "", DIR = OUT
PORT shared_memory_addr = "", VEC = [(7-1):0], DIR = OUT
PORT shared_memory_ce = "", DIR = OUT
PORT shared_memory_clk = "", DIR = OUT

END
